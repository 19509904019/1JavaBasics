区分成员变量和局部变量

1.相同点
①变量声明的格式相同： 数据类型 变量名 = 变量值
②变量都有其有效的作用域，出了作用域就失效了
③变量必须先声明，后赋值，再使用

2.不同点
①类中声明的位置的不同：
    属性：声明在类内，方法外的变量
    局部变量：声明方法、构造器内部的变量

②在内存中分配的位置不同：
    属性：随着对象的创建，存储在堆空间中
    局部变量：存储在栈空间中

③生命周期：
    属性：随着对象的创建而创建，随着对象的消亡而消亡
    局部变量：随着方法对应的栈帧入栈，局部变量会在栈中分配；
            随着方法对应的栈帧出栈，局部变量消亡

④作用域：
    属性：在整个类的内部都是有效的
    局部变量：仅限于声明此局部变量所在的方法（或构造器、代码块）中

⑤是否可以有权限修饰符进行修饰：
    都有哪些权限修饰符：public、protected、缺省、private。（用于表明所修饰的结构可调用的范围的大小）

    属性是可以使用权限修饰符进行修饰的
    局部变量不可以用权限修饰符修饰

⑥是否有默认值（重点）：
    属性：都有默认初始化值
        意味着如果没有给属性进行显式初始化赋值，则会有默认初始化值

    局部变量：都没有默认初始化值
        意味着在使用局部变量之前，必须要显示初始化赋值

类类型：
public class MyDate{
    int year;
    int month;
    int day;
}

public class Employee{
    MyDate birthday;
}

public class EmployeeTest{
    Employee emp = new Employee();
    emp.birthday = new Mydate();  //类中使用类对象，要新构造对象
    emp.birthday.year = 1998;
    emp.birthday.month = 6;
    emp.birthday.day = 13;
}







