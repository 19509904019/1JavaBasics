1. 接口的理解：接口的本质是契约、标准、规范，就像我们的法律一样，制定好大家都要遵守

2. 定义接口的而关键字：interface  （看成继承和抽象类的结合，此时相当于一个类可以被多个子类继承）
            接口提供属性和方法，但都是全局常量和抽象方法，供子类调用和重写

3. 接口内部结构的说明：
    > 可以声明：
        属性：必须使用public static final修饰
        方法：jdk8之前：声明抽象方法，修饰为public abstract
             jdk8: 声明静态方法、默认方法
             jdk9: 声明私有方法

    > 不可以声明：
        构造器、代码块等

4. 接口与类的关系：实现关系

5. 格式：class A implements B,C{}
    A相较于superA来讲，叫做子类
    A相较于B，C来讲，叫做实现类

6. 满足此关系之后，说明：
    > 类可以实现多个接口（相当于可以继承多个父类）
    > 类针对接口的多实现，一定程度上就弥补了类的单继承的局限性
    > 类必须将实现的接口中的所有的抽象方法都重写，方可实例化。
        否则，此实现类必须声明为抽象类

7. 接口与接口的关系：继承关系，且可以多继承  （类实现接口，接口继承接口，且都可以多实现多继承）

8. 接口的多态性： 接口名 变量名 = new 实现类对象;

9. 面试题：区分抽象类和接口
    > 共性：① 都可以声明抽象方法
           ② 都不能实例化

    > 不同：① 抽象类一定有构造器，接口没有构造器
           ② 类与类之间单继承关系，类与接口之间是实现关系，接口与接口之间是多继承关系