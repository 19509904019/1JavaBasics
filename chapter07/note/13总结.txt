1. 关键字：static
    ①static：静态的，随着类的加载而加载、执行
    ②static用来修饰：属性、方法、代码块、内部类
    ③熟悉：static修饰的类变量、类方法与不使用static修饰的区别
        类变量：类的生命周期内，只有一个。被类的多个实例共享
    ④掌握：我们遇到属性或方法时，需要考虑是否声明为static的

2.单例模式
    ①经典的设计模式有23种
    ②解决的问题：在整个软件系统中，只存在当前类的唯一实例
    ③实现方式：饿汉式、懒汉式、枚举类等
    ④对比饿汉式和懒汉式：
        > 饿汉式：立即加载，线程安全的
        > 懒汉式：延迟加载，线程不安全
    ⑤需要会手写饿汉式和懒汉式

3.理解main()方法
①public static void main(String[] args){}
②理解1：作为程序的入口，普通的静态方法 (所以在调用方法的时候必须要声明对象才能调用)
③理解2：如何使用main()与控制台进行数据的交互（将main作为普通方法使用）

4.类的成员之四：代码块
①分类：静态代码块、非静态代码块
②使用频率上讲：用的比较少
③静态代码块：随着类的加载而执行
④非静态代码块：随着对象的创建而执行
⑤总结：对象的实例变量可以赋值的位置及先后顺序
    可以给类的非静态的属性赋值的位置有：
        ① 默认初始化
        ② 显式初始化
        ③ 构造器初始化
        ④ 代码块中初始化
        ⑤ 有了对象以后，通过”对象.属性“或”对象.方法“进行赋值

        执行的先后顺序：① --- ② / ④ --- ③ --- ⑤

5.关键字：final
①用来修饰类、方法、变量（成员变量、局部变量）
    类：不能被继承
    方法：不能被重写
    变量：是一个"常量"，一旦赋值不能修改

6.关键字：abstract
①抽象的
②用来修饰：类、方法
    类 ---> 抽象类:不能实例化
    方法 ---> 抽象方法：没有方法体，必须由子类重写该方法

7.关键字：interface
①interface：接口，用来定义一组规范、一种标准。
②掌握：接口中可以声明的结构。
    属性：public static final 修饰
    方法：jdk8之前：只能声明抽象方法，使用public abstract修饰
         jdk8中：声明static方法、default方法
         jdk9中：声明private方法

    笔试题：抽象类、接口的对比

8.类的成员之五：内部类
>成员内部类的理解： 类中的类
>如何创建成员内部类的实例：（见4，分静态和非静态声明）
>如何在成员内部类中调用外部类的结构
    内部类与外部类变量不重名：直接调用，(外部)name = name; 等同于 com.reflectexample.Person.this.name = name;

    内部类与外部类变量重名：
        内部类调用内部变量：(内部)age = age; 或  this.age = age;
        内部类调用外部变量： com.reflectexample.Person.this.age = age;

    内部类调用外部类的方法也相同：内部类：this.eat(); 或 eat();   外部类：com.reflectexample.Person.this.eat();

>局部内部类的基本使用: 同接口的匿名使用相同  USB usb = new USB{
                                                // 重写接口中的方法
                                               }

9.枚举类：enum
①掌握：使用enum关键字定义枚举类即可

10.注解：annotation
①框架 = 注解 + 反射 + 设计模式
②Java基础阶段：简单。 @Override  @Deprecated  @SuppressWarnings
③元注解：对现有的注解进行解释说明
    @Target：表明可以用来修饰的结构
    @Retation:表明生命周期

11.包装类的使用
①掌握：基本数据类型对应的包装类都有哪些？
②掌握：基本数据类型、包装类、String三者之间的转换
    基本数据类型 <---> 包装类：自动装箱、自动拆箱
    基本数据类型、包装类 <----> String
        String的valueOf()
        包装类的parseXxx(String str)

12.IDEA：快捷键和Debug