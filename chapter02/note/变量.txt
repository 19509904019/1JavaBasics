1.变量的构成包括三个要素：数据类型、变量名、存储的值
2.Java中变量声明的格式：数据类型 变量名 = 变量值
3.Java中的变量按照数据类型来分类：
	基本数据类型（8种）：
		整型：byte short int long     // 声明long类型时，需要提供后缀。后缀为"l"或"L"
		浮点型：float double  // 声明float类型时，需要提供后缀。后缀为"f"或"F"
		字符型：char
		布尔型：boolean  //定义变量时开头用"is"(isMarried)
	
	引用数据类型：
		类(class)
		数组(array)
		接口(interface)

		枚举(enum)
		注解(annotation)
		记录(record)

4.定义变量时，变量名要遵循标识符命名的规则和规范
5.说明：
	①变量都有作用域。变量只在作用域内是有效的，出了作用域就失效了
	②在同一个作用域内，不能声明两个同名的变量
	③定义好变量以后，就可以通过变量名的方式对变量进行调用和运算
	④变量值在赋值时，必须满足变量的数据类型，并且在数据类型有效的范围内变化
6.在开发中，定义浮点型变量没有特殊情况的话通常声明double类型，因为精度更高
7.字符型声明变量使用一对''(单引号)表示，内部有且仅有一个字符
8.基本数据类型之间的运算规则(运算不包含boolean)：
	①自动类型提升
		byte、short、char --->int--->long--->float--->double
		容量小的数据类型自动转换成大的,注意byte和short之间进行运算时，结果为int型

	②强制类型转换
		(1)如果需要将容量大的变量类型转换为容量小的变量类型，需要使用强制类型转换
		(2)强制类型转换需要使用强转符：()。在()内指明要转换为的数据类型
		(3)强制类型转换过程中可能导致精度损失(double a = 2.4 ---> int a = 2)

9.基本数据类型与String的运算
	①String类，属于引用数据类型，俗称字符串
	②String类型的变量，可以使用一对""的方式进行赋值
	③String声明的字符串内部可以包含0个、1个或者多个字符

10.String与基本数据类型变量间的运算
	①这里的基本数据类型包括boolean在内的8种
	②String与基本数据类型变量间只能做连接运算，使用"+"表示
	③运算的结果是String类型
	④将字符串转化为整型("10"--->10):使用Integer类










