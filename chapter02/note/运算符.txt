补充：计算机底层存储的是数据的补码

（1）测试运算符的使用1：算数运算符的使用

 +(正) -(负) + - * / % (在前)++ (在后)++ (在前)-- (在后)-- +(连接符)

①取模以后，结果与被模数的符号相同：-12 % 5 == -2  12 % (-5) = 2
②(在前)++: ++a 先自增1再运算
③(在后)++：a++ 先运算再自增1
④+(连接符)：只适用于String与其他类型的变量间的运算，而且运算的结果也是String类型
⑤++ 或 -- 运算不改变变量的数据类型

（2）测试运算符的使用2：赋值运算符的使用

= += -= *= /*

①运算不改变变量的数据类型

（3）测试运算符的使用3：关系运算符的使用
== != < > <= >= instanceof

①运算的结果为boolean类型
②== != 可以适用于引用数据类型

（4）测试运算符的使用4：逻辑运算符的使用

& && | || ! ^

①逻辑运算符针对的都是boolean类型的变量进行的操作
②逻辑运算符运算的结果也是boolean类型
③逻辑运算符常使用条件判断结构、循环结构中
④&和&&的区分：
	相同点：1）两个符号表达的都是"且"的关系，只有当符号左右两边的类型值均为true时，结果才为true
		
	执行过程：
		1）如果符号左边是true，则&、&&都会执行符号右边的操作
		2）如果符号左边是false，则&会继续执行操作，&&不会执行符号右边的操作
	
	开发过程中推荐使用&&
⑤|和||的区分：
	相同点：1）两个符号表达的都是"或"的关系，只要符号左右两边的类型值均有true时，结果为true
		
	执行过程：
		1）如果符号左边是false，则|、||都会执行符号右边的操作
		2）如果符号左边是true，则|会继续执行操作，||不会执行符号右边的操作
	
	开发过程中推荐使用||

（5）测试运算符的使用5：位运算符的使用
 
 <<  >>  >>>   &  |  ^  ~

 ①主要针对数值类型的变量或常量进行运算，运算的结果也是数值
 ②<<:在一定范围内，每向左移动一位，结果就在原有的基础上 * 2（对于正数、负数都适用）

（6）测试运算符的使用6：条件运算符的使用
	
	(条件表达式?)表达式1 : 表达式2

	①条件表达式的结果是boolean型
	②如果条件表达式的结果是true，则执行表达式1，否则执行表达式2
	③表达式1 和 表达式2 需要是相同的类型或能兼容的类型
	④开发中凡是可以使用条件运算符的位置，都可以改写成if-else。而能使用if-else不一定能改写成条件运算符
	  在二者都能使用的情况下，建议使用条件运算符。



开发建议：
①不要过多依赖运算的优先级来控制表达式的执行顺序，这样可读性太差，尽量使用（）来控制表达式的执行顺序
②不要把一个表达式写的过于复杂，如果一个表达式过于复杂，则把它分成几步来完成

