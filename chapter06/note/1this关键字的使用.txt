this关键字的使用

    1. 目前可能出现的问题及解决方案？
        我们在声明一个属性对应的set方法时，过形参给对应的属性赋值。如果形参名和属性名同名了，可以
        使用this来进行区分

        ①具体来讲，使用this修饰变量，表示的是属性。没有用this修饰的，表示的是形参

        public class com.reflectexample.Person{
               private int age;

               public void setAge(int age){
                    this.age = age;  // this后代表的是类的属性，age代表的是形参
                    }
        }

        ② this可以调用的结构：成员变量、方法、构造器

        ③ this的理解：当前对象（在方法中调用时）或当前正在创建的对象（在构造器中调用时）

    2. this调用属性和方法
        针对于方法内的使用情况：(准确的说是非static修饰的方法)

        一般情况：我们通过对象调用方法，可以在方法内调用当前对象a的属性或其他方法。此时，我们可以在
        属性和其他方法前使用"this.",表示当前属性或方法所属的对象a。但是，一般情况下，我们都选择省略此
        "this."结构。

        特殊情况：如果方法的形参与对象的属性同名了，我们必须使用"this."进行区分。使用"this."修饰的变量
        即为属性（或成员变量），没有使用"this."修饰的变量，即为局部变量。

        public class com.reflectexample.Person{
                       private int age;

                       public void setAge(int age){
                            this.age = age;  // 形参与属性名相同，则属性名前加上this
                            }
                }


        针对于构造器内的使用情况：(准确的说是非static修饰的方法)

           一般情况：我们通过构造器创建对象时，可以在构造器内调用当前正在创建的对象属性或其他方法。
           此时，我们可以在属性和方法前使用"this.",表示当前属性或方法所属的对象。但是，一般情况下，
           我们都选择省略此"this."结构。

           特殊情况：如果构造器的形参与正在创建的对象的属性同名了，我们必须使用"this."进行区分。
           使用"this."修饰的变量即为属性（或成员变量），没有使用"this."修饰的变量，即为局部变量。

   3.this调用构造器
    >格式: "this(形参列表)"
    >我们可以在类的构造器中，调用当前类中指定的其他构造器
    >要求："this(形参列表)"必须声明在当前构造器的首行
    >结论："this(形参列表)"在构造器中最多声明一个
    >如果一个类中声明了n个构造器，则最多有n-1个构造器可以声明有"this(形参列表)"的结构（不能形成一个闭环）